groups:
  - name: queue-increase
    rules:
      - alert: QueueIncrease
#        expr: sum(deriv(general_tasks_count[10s])) / sum(deriv(completed_tasks_count[10s])) > 1
        expr: sum(deriv(tasks_in_queue_count[10s])) / (sum(tasks_in_progress_count) / avg(complete_waiting_time)) > 0
        for: 30s
        annotations:
          summary: Queue increase coefficient
          queue_increase_coefficient: "{{ $value }}"

  - name: queue-decrease
    rules:
      - alert: QueueDecrease
#        expr: sum(deriv(general_tasks_count[10s])) / sum(deriv(completed_tasks_count[10s])) < 1
        expr: sum(deriv(tasks_in_queue_count[10s])) / (sum(tasks_in_progress_count) / avg(complete_waiting_time)) < 0 and sum(tasks_in_queue_count) < (10 * sum(tasks_in_progress_count))
        for: 1m
        annotations:
          summary: Queue decrease coefficient
          queue_decrease_coefficient: "{{ $value }}"

  - name: waiting-too-long
    rules:
      - alert: WaitingTooLong
        expr: deriv(completed_tasks_count{role="bronze-client"}[10s]) == 0
        for: 1m
        annotations:
          summary: Tasks from account with role bronze-client is waiting too long
          waiting_time: 60

  - name: waiting-ok
    rules:
      - alert: WaitingOk
        expr: deriv(completed_tasks_count{role="bronze-client"}[10s]) > 0
        for: 1m
        annotations:
          summary: Tasks from account with role bronze-client is waiting ok
          waiting_time: 15

  - name: high-priority-waiting-too-long
    rules:
      - alert: HighPriorityWaitingTooLong
        expr: predict_linear(extracted_tasks_waiting_time{role="gold-client"}[10s], 10) > 20
        for: 1m
        annotations:
          summary: Tasks from account with role gold-client is waiting too long
          waiting_time: "{{ $value }}"
